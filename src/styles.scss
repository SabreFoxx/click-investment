@use "sass:math";

@import "variables";
@import "bulma/sass/utilities/_all";
@import "bulma/sass/base/_all";
@import "bulma/sass/elements/_all";
@import "bulma/sass/form/shared.sass";
@import "bulma/sass/form/input-textarea.sass";
@import "bulma/sass/form/checkbox-radio.sass";
@import "bulma/sass/form/select.sass";
@import "bulma/sass/form/file.sass";
@import "bulma/sass/components/dropdown.sass";
@import "bulma/sass/components/pagination.sass";
@import "bulma/sass/components/breadcrumb.sass";
@import "bulma/sass/components/message.sass";
// @import "bulma/sass/components/media.sass";
// @import "bulma/sass/components/modal.sass";
// @import "bulma/sass/components/panel.sass";
// @import "bulma/sass/components/tabs.sass";

@import "csshake/scss/csshake-slow.scss";
@import "/src/animations.scss";

body {
    color: $text-color;
    font-size: calc(1vw + 0.6em);
    font-family: $display-font;

    @media (min-width: 48em) {
        font-size: calc(1vw + 0.4em);
    }

    @media (min-width: 64em) {
        font-size: calc(1vw + 0.08em);
    }
}

img {
    max-width: 100% !important;
}

.root-container {
    @include pad-container();
    max-width: $control-width - 150px !important;
}

.header {
    position: fixed;
    top: 0%;
    width: 100%;
    z-index: 1;
    background-color: white;
}

.spc {
    margin-top: $line-margin !important;
}

.sm-spc {
    margin-top: $line-margin * 0.5 !important;
}

.tny-spc {
    margin-top: $line-margin * 0.25 !important;
}

.horizontal-line {
    border-bottom: 1px solid $grey-light;
}

.svg-icon {
    display: inline !important;
    width: 1.5rem; // 24px
    height: 1.5rem; // 24px
    stroke-width: 0;
    vertical-align: middle !important;
    stroke: currentColor;
    fill: currentColor;

    &-for-sweet-alert {
        width: 3rem;
        height: 3rem;
    }
}

.button {
    font-family: $text-font;

    &.is-rounded {
        background-color: transparent;
        border: 1px solid $link;
        box-sizing: content-box;
        margin: 1em 0;
        color: $link;
        font-weight: bold;
        transition: box-shadow 200ms ease-in-out;

        &:hover {
            box-shadow: 0px 0px 0px 2px $link;
            border: 1px solid $link; // override bulma's
            color: $link;
        }
    }

    &.is-link {
        background-color: $link;
        color: white;
        transition: background-color 0.1s ease, border-color 0.1s ease, box-shadow 0.1s ease;

        &:hover {
            background-color: lighten($link, 7%);
            border-color: lighten($link, 7%);
            box-shadow: 0px 0px 0px 2px lighten($link, 7%);
            color: white;
        }
    }

    &.mgn:nth-child(even) {
        margin-left: 1em;
    }
}

.input {
    &-row {
        display: flex;
        align-items: center;
        justify-content: space-between;

        >* {
            flex-basis: 48%;
        }
    }

    &-box {
        $font-size: 1rem;
        $padding: 0.3rem; // allowance for shadow hover effect to show

        position: relative;
        padding: $padding 0;
        max-height: $input-height + $padding;
        width: 100%;

        .input {
            position: static;
            height: $input-height;
            font-family: $text-font;
            font-weight: 200;
            width: 100%;

            &:hover {
                box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 1) inset;
                ;
            }

            &.validation-failed {
                background-color: lighten($info-color-red, 35%);
                border-color: $info-color-red;
            }
        }

        .label {
            display: block;
            line-height: 0;
            font-family: $text-font;
            font-weight: 200;
            font-size: $font-size;
            transform: translate(1rem, calc(#{$font-size} + #{$input-height * 0.25}));
            transform-origin: left;
            transition: transform 0.2s ease, font-size 0.2s ease, color 0.2s linear;
        }

        .move-label {
            transform: translate(0.9rem, $input-height * 0.25);
            font-size: math.div($font-size, 1.5);
        }

        .fixed-icon {
            display: block;
            position: absolute;
            top: 50%;
            height: $input-height;

            svg {
                position: relative;
                top: calc(-1 * #{math.div($input-height, 6)});
            }

            &.is-right {
                right: 1rem;
            }

            &.is-left {
                left: 1rem;
            }
        }

        >.validation-failed {
            color: $info-color-red;
        }
    }
}

.container {
    &-card {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        align-content: space-between;
        border-radius: 2rem;
        background-color: white;
        padding-bottom: 0 !important;
    }

    &-white {
        border-radius: $border-radius;
        background-color: white;
        padding: 1rem;
        margin-bottom: 1em;
    }
}

.border {
    border: 1px solid black;
    padding: 0.5em $page-padding;
    margin: $margin auto;

    @media (min-width: 48em) {
        max-width: 55%;
    }
}

hr.line {
    display: block;
    height: 1px;
    border: 0;
    background-color: white;
    margin: 0.8em 4px;
    padding: 0;
}

.main-title {
    flex-grow: 1;
    flex-basis: 50%;
    margin: auto;
    font-size: 3em;
    font-family: $display-font;
    font-weight: 600;
    line-height: 0;
    color: $text-color;
}

.sub-title {
    font-size: 1.5em;
    line-height: 1;
}

.table-title {
    color: $link;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    margin-bottom: 0;
}

.table {
    width: 100%;
    font-family: $text-font;
    font-size: 1.1em;
    color: $text-color;
    margin-bottom: 1em;

    th,
    td {
        padding-top: 1em;
        padding-bottom: 1em;
        color: $text-color;
        vertical-align: middle;
    }

    tr {
        transition: all 150ms ease-in;

        &.row:hover {
            background-color: $grey-lightest;
        }
    }

    &-adjust {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }

    .status {
        .flex {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        &-icon {
            display: block;
            border: 2px solid $grey-lightest;
            width: 1.2em;
            height: 1.2em;
            border-radius: 50%;
            margin-left: 5px;

            &.success {
                background-color: $pastel-color-green;
            }

            &.pending {
                background-color: $pastel-color-orange;
            }

            &.failure {
                background-color: $pastel-color-red;
            }
        }
    }
}

.paging {
    display: flex;
    justify-content: space-between;
    align-items: center;

    .position {
        margin-right: 2em;
    }

    .pagination {
        flex-grow: 1;
    }
}

h1,
h2,
h3,
h4,
h5,
h6 {
    line-height: 1.4;
    font-family: $display-font;
}

h1 {
    $multiplier: 2.5;
    font-size: $multiplier * $scale * 1em;
    font-weight: bold;
}

h2 {
    $multiplier: 1.4;
    font-size: $multiplier * $scale * 1em;
    font-weight: bold;
}

h3 {
    font-size: 1 * $scale * 1em;
    font-weight: bold;
}

h4 {
    font-size: $scale * 0.5 * 1em;
}

h5 {
    font-size: math.div($scale, 3) * 1em;
}

// multiplying by 1em is just to convert to the type
h6 {
    font-size: $scale * 0.25 * 1em;
}

.swiper {
    // for swiperjs.com
    // for the sake of our Angular router animation and it brief 
    // absolute positioning, we shouldn't have a margin-top
    margin-top: 0;
    caret-color: transparent;
    width: 100%;
}